@import "bourbon";
@import "neat";
@import "vars";

@mixin transition($duration: 0.1s){
  -webkit-transition: all $bezier $duration;
  transition: all $bezier $duration;
}

@mixin globalPadding(){
  padding: $global-padding;
}

@mixin verticalAlign() {
  position: relative;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
}

/* from: http://www.ryanscherler.com/notes/entry/omega-reset-for-bourbon-neat/ */
@mixin omegaReset($nth, $context: null) {
  @if $context == null {
    &:nth-child(#{$nth}) { margin-right: flex-gutter(); }
  } @else {
    &:nth-child(#{$nth}) { margin-right: flex-gutter($context); }
  }
  &:nth-child(#{$nth}+1) { clear: none; }
}

@mixin gridResponsive($cols: 6, $gridSize: 12) {
  @include span-columns($gridSize);

  @include media(min-width $sm-break-width, $gridSize) {
    @include span-columns(floor($gridSize/($cols/2)));
    @include omega(($cols/2) + "n");
  }

  @include media(min-width $md-break-width, $gridSize) {
    @include span-columns(floor($gridSize/$cols));
    @include omegaReset(($cols/2) + "n", $gridSize)
    @include omega($cols + "n");
  }
}

@mixin mobile {
  @media (max-width: #{$mobile-width}) {
    @content;
  }
}

@mixin tablet {
  @media (min-width: #{$mobile-width + 1}) and (max-width: #{$tablet-width}) {
    @content;
  }
}

@mixin desktop {
  @media (min-width: #{$tablet-width + 1}) and (max-width: #{$desktop-width}) {
    @content;
  }
}

@mixin retina {
  @media (min-width: #{$desktop-width + 1}) {
    @content;
  }
}

/* from https://gist.github.com/bpainter/1085320 */
@mixin arrow($direction, $color, $size){
    display: block;
    height: 0;
    width: 0;

    @if $direction == 'top' {
        border-left: $size solid transparent;
    	border-right: $size solid transparent;
    	border-bottom: $size solid $color;
    } @else if $direction == 'right' {
        border-top: $size solid transparent;
        border-bottom: $size solid transparent;
    	border-left: $size solid $color;
    } @else if $direction == 'bottom' {
        border-top: $size solid $color;
        border-right: $size solid transparent;
        border-left: $size solid transparent;
    } @else if $direction == 'left' {
        border-top: $size solid transparent;
    	border-right: $size solid $color;
    	border-bottom: $size solid transparent;
    } @else if $direction == 'top-left' {
        border-top: $size solid $color;
        border-right: $size solid transparent;
    } @else if $direction == 'top-right' {
        border-top: $size solid $color;
        border-left: $size solid transparent;
    } @else if $direction == 'bottom-left' {
        border-bottom: $size solid $color;
        border-right: $size solid transparent;
    } @else if $direction == 'bottom-right' {
        border-bottom: $size solid $color;
        border-left: $size solid transparent;
    }
}
